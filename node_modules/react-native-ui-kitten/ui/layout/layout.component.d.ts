/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { ViewProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
interface ComponentProps {
    level?: string;
    children?: React.ReactNode;
}
export declare type LayoutProps = StyledComponentProps & ViewProps & ComponentProps;
export declare type LayoutElement = React.ReactElement<LayoutProps>;
/**
 * `Layout` container component. Behaves like React Native `View`.
 * The key feature of using `Layout` instead of `View` is that
 * it automatically picks background color fitting to current theme.
 *
 * @extends React.Component
 *
 * @property {string} level - Determines background color level of component.
 * Can be `level='1'`, `level='2'`, `level='3'` or `level='4'`.
 *
 * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines the children of the component.
 *
 * @property ViewProps
 *
 * @property StyledComponentProps
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react';
 * import { Layout, Text } from '../..';
 *
 * export const LayoutShowcase = (props) => (
 *   <Layout>
 *     <Text>Layout</Text>
 *   </Layout>
 * );
 * ```
 *
 * @overview-example Layout Levels
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { Layout, Text } from '../..';
 *
 * export const LayoutShowcase = (props) => (
 *   <Layout style={styles.container} level='4'>
 *     <Layout style={styles.container} level='3'>
 *       <Layout style={styles.container} level='2'>
 *         <Layout style={[styles.container, styles.contentContainer]}>
 *           <Text>Welcome to UI Kitten</Text>
 *         </Layout>
 *       </Layout>
 *     </Layout>
 *   </Layout>
 * );
 *
 * const styles = StyleSheet.create({
 *   container: { flex: 1, padding: 16 }
 *   contentContainer: { justifyContent: 'center', alignItems: 'center' }
 * });
 * ```
 *
 * @overview-example Eva Styling
 *
 * ```
 * import React from 'react';
 * import { Layout, Text } from '../..';
 *
 * export const LayoutShowcase = (props) => (
 *   <Layout level='2'>
 *     <Text>Layout</Text>
 *   </Layout>
 * );
 * ```
 *
 * @example Inline Styling
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from '../..';
 * import { Layout, Text } from '../..';
 *
 * export const LayoutShowcase = (props) => (
 *   <Layout style={styles.container}>
 *     <Text>Layout</Text>
 *   </Layout>
 * );
 *
 * const styles = StyleSheet.create({
 *   container: { flex: 1, justifyContent: 'center', alignItems: 'center' },
 * });
 * ```
 */
export declare class LayoutComponent extends React.Component<LayoutProps> {
    static styledComponentName: string;
    render(): React.ReactElement<ViewProps>;
}
export declare const Layout: React.ComponentClass<LayoutProps, any>;
export {};
