/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { TextProps as RNTextProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
declare type ChildElement = string | TextElement;
interface ComponentProps {
    category?: string;
    status?: string;
    children?: ChildElement | ChildElement[];
}
export declare type TextProps = StyledComponentProps & RNTextProps & ComponentProps;
export declare type TextElement = React.ReactElement<TextProps>;
/**
 * Styled `Text` component.
 *
 * @extends React.Component
 *
 * @property {string} status - Determines the status of the component.
 * Can be `primary`, `success`, `info`, `warning` or `danger`.
 *
 * @property {string} children - Determines text of the component.
 *
 * @property {string} category - Determines the category of the component.
 * Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.
 * Default is `p1`.
 *
 * @property {string} appearance - Determines the appearance of the component.
 * Can be `default`, `alternative`, `hint`.
 * Default is `default`.
 *
 * @property TextComponentProps
 *
 * @property StyledComponentProps
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react';
 * import { Text } from '../..';
 *
 * export const TextShowcase = (props) => (
 *   <Text>Sample Text</Text>
 * );
 * ```
 *
 * @overview-example Eva Styling
 *
 * ```
 * import React from 'react';
 * import { Text } from '../..';
 *
 * export const TextShowcase = (props) => (
 *   <Text
 *     appearance='hint'
 *     category='p2'
 *     status='success'>
 *     Sample Text
 *   </Text>
 * );
 * ```
 *
 * @example Inline Styling
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { Text } from '../..';
 *
 * export const TextShowcase = (props) => (
 *   <Text style={styles.text}>Sample Text</Text>
 * );
 *
 * const styles = StyleSheet.create({
 *   text: { color: 'black', fontSize: 18 },
 * });
 * ```
 */
export declare class TextComponent extends React.Component<TextProps> {
    static styledComponentName: string;
    render(): React.ReactElement<RNTextProps>;
}
export declare const Text: React.ComponentClass<TextProps, any>;
export {};
