/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { ImageProps, StyleProp, TextStyle, TouchableOpacityProps } from 'react-native';
import { StyledComponentProps, StyleType } from '../../theme';
import { TouchableIndexedProps } from '../support/typings';
declare type IconElement = React.ReactElement<ImageProps>;
declare type AccessoryElement = React.ReactElement<any>;
declare type IconProp = (style: StyleType, index: number) => IconElement;
declare type AccessoryProp = (style: StyleType, index: number) => AccessoryElement;
interface ListDerivedProps {
    index?: number;
}
interface TemplateBaseProps {
    icon?: IconProp;
    accessory?: AccessoryProp;
}
interface TemplateTitleProps extends TemplateBaseProps {
    title: string;
    description?: string;
    titleStyle?: StyleProp<TextStyle>;
}
interface TemplateDescriptionProps extends TemplateBaseProps {
    title?: string;
    description: string;
    descriptionStyle?: StyleProp<TextStyle>;
}
interface CustomContentProps {
    children?: React.ReactNode;
}
declare type ComponentProps = (TemplateTitleProps | TemplateDescriptionProps | CustomContentProps) & ListDerivedProps;
export declare type ListItemProps = StyledComponentProps & TouchableIndexedProps & ComponentProps;
export declare type ListItemElement = React.ReactElement<ListItemProps>;
/**
 * `ListItem` is a support component for `List`.
 * The key feature of wrapping custom list items into `ListItem` component is that it automatically
 * picks background color fitting to current theme and responds to touches with feedback.
 *
 * @extends React.Component
 *
 * @property {string} title - Determines the title of the ListItem.
 *
 * @property {string} description - Determines the description of the ListItem's title.
 *
 * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.
 *
 * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.
 *
 * @property {React.ReactNode} children - Determines React Children of the component.
 *
 * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the
 * component.
 *
 * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the
 * component.
 *
 * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when
 * component is pressed.
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react'
 * import { ListItem } from '../..';
 *
 * export const ListItemShowcase = (props) => (
 *   <ListItem title='Title' description='Description' />
 * );
 * ```
 *
 * @overview-example With Icon
 *
 * ```
 * // IMPORTANT: To use Icon component make sure to follow this guide:
 * // https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons
 *
 * import React from 'react'
 * import { ListItem, Icon } from '../..';
 *
 * const StarIcon = (style) => (
 *   <Icon {...style} name='star' />
 * );
 *
 * export const ListItemShowcase = (props) => (
 *   <ListItem title='Title' description='Description' icon={StarIcon} />
 * );
 * ```
 *
 * @example With Accessory
 *
 * ```
 * import React from 'react'
 * import { ListItem, Button } from '../..';
 *
 * export const ListItemShowcase = (props) => {
 *
 *   const Accessory = (style) => (
 *     <Button style={style}>BUTTON</Button>
 *   );
 *
 *   return (
 *     <ListItem title='Title' description='Description' accessory={Accessory} />
 *   );
 * };
 * ```
 *
 * @example Using Asset Icons
 *
 * ```
 * import React from 'react';
 * import { Image } from 'react-native';
 * import { ListItem } from '../..';
 *
 * const StarIcon = (style) => (
 *   <Image style={style} source={require('path-to-assets/local-image.png')} />
 * );
 *
 * export const ListItemShowcase = (props) => (
 *   <ListItem title='Title' description='Description' icon={StarIcon} />
 * );
 * ```
 *
 * @example Inline Styling
 *
 * ```
 * import React from 'react'
 * import { StyleSheet } from '../..';
 * import { ListItem } from '../..';
 *
 * export const ListItemShowcase = (props) => (
 *   <ListItem
 *     style={styles.listItem}
 *     titleStyle={styles.listItemTitle}
 *     descriptionStyle={styles.listItemDescription}
 *     title='Title'
 *     description='Description'
 *   />
 * );
 *
 * const styles = StyleSheet.create({
 *   listItem: { borderRadius: 8 },
 *   listItemTitle: { color: 'black' },
 *   listItemDescription: { color: 'gray' },
 * });
 * ```
 */
export declare class ListItemComponent extends React.Component<ListItemProps> {
    static styledComponentName: string;
    private onPress;
    private onPressIn;
    private onPressOut;
    private onLongPress;
    private getComponentStyle;
    private renderIconElement;
    private renderContentElement;
    private renderTitleElement;
    private renderDescriptionElement;
    private renderAccessoryElement;
    private renderContentElementChildren;
    private renderTemplateChildren;
    private renderComponentChildren;
    render(): React.ReactElement<TouchableOpacityProps>;
}
export declare const ListItem: React.ComponentClass<ListItemProps, any>;
export {};
