import React from 'react';
import { ImageStyle, TouchableOpacityProps, ImageProps } from 'react-native';
import { BaseCalendarProps } from '../calendar/baseCalendar.component';
import { NativeDateService } from '../calendar/service/nativeDate.service';
import { CalendarElement } from '../calendar/calendar.component';
import { RangeCalendarElement } from '../calendar/rangeCalendar.component';
import { StyledComponentProps } from '../../theme';
interface State {
    visible: boolean;
}
export interface ComponentProps {
    icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;
}
export declare type DatepickerProps<D> = ComponentProps & StyledComponentProps & TouchableOpacityProps & BaseCalendarProps<D>;
export declare abstract class BaseDatepickerComponent<D, P> extends React.Component<DatepickerProps<D> & P, State> {
    static defaultProps: {
        dateService: NativeDateService;
    };
    state: State;
    protected abstract getComponentTitle(): string;
    protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;
    protected formatDateToString(date: D): string;
    private getComponentStyles;
    private onPressIn;
    private onPressOut;
    private toggleVisible;
    private dispatchActive;
    private renderIcon;
    private renderText;
    private renderControl;
    render(): React.ReactNode;
}
export {};
