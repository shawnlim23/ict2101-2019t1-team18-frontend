/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { ViewProps, ViewStyle, StyleProp } from 'react-native';
import { ModalPresentingBased } from '../support/typings';
export declare const baseModalTestId: string;
declare type ChildElement = React.ReactElement<any>;
declare type ChildrenProp = ChildElement | ChildElement[];
interface ComponentProps {
    visible: boolean;
    children: ChildrenProp;
    backdropStyle?: StyleProp<ViewStyle>;
}
export declare type ModalProps = ViewProps & ComponentProps & ModalPresentingBased;
export declare type ModalElement = React.ReactElement<ModalProps>;
/**
 * `Modal` component is a wrapper than presents content above an enclosing view.
 *
 * @extends React.Component
 *
 * @property {boolean} visible - Determines whether component is visible. By default is false.
 *
 * @property {React.ReactElement<any> | React.ReactElement<any>[]} children -
 * Determines component's children.
 *
 * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.
 * Default is `false`.
 *
 * @property {BackdropStyle} backdropStyle - Determines the style of backdrop.
 *
 * @property {() => void} onBackdropPress - Determines component's behavior when the user is
 * tapping on back-drop.
 *
 * @property ViewProps
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { Button, Modal, Text, Layout } from '../..';
 *
 * export class ModalShowcase extends React.Component {
 *
 *   state = {
 *     modalVisible: false,
 *   };
 *
 *   setModalVisible = () => {
 *     const modalVisible = !this.state.modalVisible;
 *     this.setState({ modalVisible });
 *   };
 *
 *   renderModalElement = () => {
 *     return (
 *       <Layout
 *         level='3'
 *         style={styles.modalContainer}>
 *         <Text>This is modal</Text>
 *         <Button onPress={this.setModalVisible}>Hide Modal</Button>
 *       </Layout>
 *     );
 *   };
 *
 *   render() {
 *     return (
 *       <Layout style={styles.container}>
 *         <Button onPress={this.setModalVisible}>Show Modal</Button>
 *         <Modal visible={this.state.modalVisible}>
 *           {this.renderModalElement()}
 *         </Modal>
 *       </Layout>
 *     );
 *   }
 * }
 *
 * const styles = StyleSheet.create({
 *   container: {
 *     flex: 1,
 *     padding: 16,
 *   },
 *   modalContainer: {
 *     width: 200,
 *     height: 200,
 *     justifyContent: 'center',
 *     alignItems: 'center',
 *   },
 * });
 * ```
 *
 * @overview-example With Backdrop
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { Button, Modal, Text, Layout } from '../..';
 *
 * export class ModalShowcase extends React.Component {
 *
 *   state = {
 *     modalVisible: false,
 *   };
 *
 *   setModalVisible = () => {
 *     const modalVisible: boolean = !this.state.modalVisible;
 *     this.setState({ modalVisible });
 *   };
 *
 *   renderModalElement = () => {
 *     return (
 *       <Layout
 *         level='3'
 *         style={styles.modalContainer}>
 *         <Text>This is modal</Text>
 *         <Button onPress={this.setModalVisible}>Hide Modal</Button>
 *       </Layout>
 *     );
 *   };
 *
 *   render() {
 *     return (
 *       <Layout style={styles.container}>
 *         <Button onPress={this.setModalVisible}>Show Modal</Button>
 *         <Modal
 *           allowBackdrop={true}
 *           backdropStyle={{ backgroundColor: 'black', opacity: 0.5 }}
 *           onBackdropPress={this.setModalVisible}
 *           visible={this.state.modalVisible}>
 *           {this.renderModalElement()}
 *         </Modal>
 *       </View>
 *     );
 *   }
 * }
 *
 * const styles = StyleSheet.create({
 *   container: {
 *     flex: 1,
 *     padding: 16,
 *   },
 *   modalContainer: {
 *     width: 200,
 *     height: 200,
 *     justifyContent: 'center',
 *     alignItems: 'center',
 *   },
 * });
 * ```
 */
export declare class Modal extends React.Component<ModalProps> {
    static defaultProps: Partial<ModalProps>;
    private contentSize;
    private id;
    componentDidUpdate(prevProps: ModalProps): void;
    private handleVisibility;
    private getAbsoluteRelatedStyle;
    private onMeasure;
    private renderBaseModal;
    private renderModal;
    private renderMeasureNode;
    render(): React.ReactNode;
}
export {};
