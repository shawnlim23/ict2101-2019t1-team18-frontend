/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { StyleProp, TextStyle, TouchableOpacityProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
interface ComponentProps {
    textStyle?: StyleProp<TextStyle>;
    text?: string;
    checked?: boolean;
    status?: string;
    onChange?: (selected: boolean) => void;
}
export declare type RadioProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;
export declare type RadioElement = React.ReactElement<RadioProps>;
/**
 * Styled `Radio` component.
 *
 * @extends React.Component
 *
 * @property {boolean} checked - Determines whether component is checked.
 * Default is `false`.
 *
 * @property {boolean} disabled - Determines whether component is disabled.
 * Default is `false`.
 *
 * @property {string} status - Determines the status of the component.
 * Can be `primary`, `success`, `info`, `warning`, `danger`, basic` or `control`.
 * Default is `basic`.
 *
 * @property {string} text - Determines text of the component.
 *
 * @property {StyleProp<TextStyle>} textStyle - Customizes text style.
 *
 * @property {(selected: boolean) => void} onChange - Triggered on onChange value.
 *
 * @property TouchableOpacityProps
 *
 * @property StyledComponentProps
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react';
 * import { Radio } from '../..';
 *
 * export class RadioShowcase extends React.Component {
 *
 *   state = {
 *     checked: false,
 *   };
 *
 *   onChange = (checked) => {
 *     this.setState({ checked });
 *   };
 *
 *   render() {
 *     return (
 *       <Radio
 *         checked={this.state.checked}
 *         onChange={this.onChange}
 *       />
 *     )
 *   }
 * }
 *
 * ```
 * @overview-example With Text
 *
 * ```
 * import React from 'react';
 * import { Radio } from '../..';
 *
 * export class RadioShowcase extends React.Component {
 *
 *   state = {
 *     checked: false,
 *   };
 *
 *   onChange = (checked) => {
 *     this.setState({ checked });
 *   };
 *
 *   render() {
 *     return (
 *       <Radio
 *         text='Place your text'
 *         checked={this.state.checked}
 *         onChange={this.onChange}
 *       />
 *     )
 *   }
 * }
 * ```
 *
 * @overview-example Eva Styling
 *
 * ```
 * import React from 'react';
 * import { Radio } from '../..';
 *
 * export class RadioShowcase extends React.Component {
 *
 *   state = {
 *     checked: false,
 *   };
 *
 *   onChange = (checked) => {
 *     this.setState({ checked });
 *   };
 *
 *   render() {
 *     return (
 *       <Radio
 *         status='warning'
 *         checked={this.state.checked}
 *         onChange={this.onChange}
 *       />
 *     )
 *   }
 * }
 * ```
 *
 * @example Inline Styling
 *
 * ```
 * import React from 'react';
 * import { StyleSheet } from 'react-native';
 * import { Radio } from '../..';
 *
 * export const RadioShowcase = (props) => (
 *   <Radio
 *     style={styles.radio}
 *     textStyle={styles.radioText}
 *     checked={true}
 *   />
 * );
 *
 * const styles = StyleSheet.create({
 *   radio: { width: 32, height: 32 },
 *   radioText: { color: 'black' },
 * });
 * ```
 */
export declare class RadioComponent extends React.Component<RadioProps> {
    static styledComponentName: string;
    private onPress;
    private onPressIn;
    private onPressOut;
    private getComponentStyle;
    private createHitSlopInsets;
    private renderTextElement;
    private renderComponentChildren;
    render(): React.ReactElement<TouchableOpacityProps>;
}
export declare const Radio: React.ComponentClass<RadioProps, any>;
export {};
