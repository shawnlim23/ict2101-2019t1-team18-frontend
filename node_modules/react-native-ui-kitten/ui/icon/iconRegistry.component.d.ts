import React from 'react';
import { IconPack } from './service/type';
declare type IconsProp = IconPack<any> | IconPack<any>[];
export interface IconRegistryProps {
    icons: IconsProp;
    defaultIcons?: string;
}
export declare type IconRegistryElement = React.ReactElement<IconRegistryProps>;
/**
 * Icon Registry component. Registers one or more icon packs for later usage in `<Icon/>` component.
 * Renders nothing, but should be added as a child of an Application Root.
 *
 * @extends React.Component
 *
 * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.
 * @property {string} defaultIcons - Name of an icon pack that is used by default.
 *
 * @overview-example Simple Usage
 *
 * ```
 * import React from 'react';
 * import { mapping, light as lightTheme } from '@eva-design/eva';
 * import { ApplicationProvider, IconRegistry, Layout, Text } from '../..';
 * import { EvaIconsPack } from '../../../eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons
 *
 * export default class App extends React.Component {
 *   render() {
 *     return (
 *       <React.Fragment>
 *         <IconRegistry icons={EvaIconsPack}/>
 *         <ApplicationProvider mapping={mapping} theme={lightTheme}>
 *           <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>
 *             <Text>Welcome to UI Kitten</Text>
 *           </Layout>
 *         </ApplicationProvider>
 *       <React.Fragment>
 *     );
 *   }
 * }
 * ```
 */
export declare class IconRegistry extends React.Component<IconRegistryProps> {
    static defaultProps: Partial<IconRegistryProps>;
    private findDefaultIconPack;
    private registerIcons;
    render(): React.ReactNode;
}
export {};
