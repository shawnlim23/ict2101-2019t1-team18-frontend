/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import React from 'react';
import { GestureResponderEvent, TextStyle, TouchableOpacityProps } from 'react-native';
import { StyledComponentProps } from '../../theme';
import { TouchableTypeReturningProps } from '../support/typings';
export interface SelectOptionType {
    text: string;
    textStyle?: TextStyle;
    disabled?: boolean;
    items?: SelectOptionType[];
}
export interface ComponentProps {
    item: SelectOptionType;
    selected?: boolean;
    indeterminate?: boolean;
    multiSelect?: boolean;
}
export declare type SelectOptionProps = ComponentProps & StyledComponentProps & TouchableTypeReturningProps<SelectOptionType>;
export declare type SelectOptionElement = React.ReactElement<SelectOptionProps>;
export declare const SelectOption: React.ComponentClass<StyledComponentProps & ComponentProps & Pick<TouchableOpacityProps, "style" | "hitSlop" | "onLayout" | "testID" | "hasTVPreferredFocus" | "tvParallaxProperties" | "accessible" | "accessibilityLabel" | "accessibilityRole" | "accessibilityStates" | "accessibilityHint" | "accessibilityComponentType" | "accessibilityLiveRegion" | "importantForAccessibility" | "accessibilityElementsHidden" | "accessibilityTraits" | "onAccessibilityTap" | "onMagicTap" | "accessibilityIgnoresInvertColors" | "disabled" | "activeOpacity" | "delayLongPress" | "delayPressIn" | "delayPressOut" | "onBlur" | "onFocus" | "pressRetentionOffset"> & {
    onPress?: (item: SelectOptionType, event: GestureResponderEvent) => void;
    onPressIn?: (item: SelectOptionType, event: GestureResponderEvent) => void;
    onPressOut?: (item: SelectOptionType, event: GestureResponderEvent) => void;
    onLongPress?: (item: SelectOptionType, event: GestureResponderEvent) => void;
}, any>;
