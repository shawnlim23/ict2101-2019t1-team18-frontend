import { SelectOptionType } from './selectOption.component';
export interface SelectionStrategy {
    selectedOption: SelectOptionType | SelectOptionType[];
    isSelected: (item: SelectOptionType) => boolean;
    select: (option: SelectOptionType, callback?: () => void) => SelectOptionType | SelectOptionType[];
    getPlaceholder: (placeholder: string) => string;
}
export declare class MultiSelectStrategy implements SelectionStrategy {
    selectedOption: SelectOptionType[];
    constructor(options: SelectOptionType | SelectOptionType[]);
    select(option: SelectOptionType, callback?: () => void): SelectOptionType[];
    private selectDefaultOption;
    private selectOptionWithSubOptions;
    getPlaceholder(placeholder: string): string;
    isSelected(item: SelectOptionType): boolean;
    private isSelectedOptionExist;
    private removeOption;
    private areThereSubOptions;
}
export declare class SingleSelectStrategy implements SelectionStrategy {
    selectedOption: SelectOptionType;
    constructor(options: SelectOptionType | SelectOptionType[]);
    select(option: SelectOptionType, callback?: () => void): SelectOptionType;
    getPlaceholder(placeholder: string): string;
    isSelected(item: SelectOptionType): boolean;
    private hasOptionSubItems;
}
